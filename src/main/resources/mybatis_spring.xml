<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd 
                        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd 
                        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd ">

	
	<util:properties id="config" location="classpath:DB.properties"></util:properties>

	<!-- 配置连接池 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="#{config.driverClassName}"/>
		<property name="url" value="#{config.url}"/>
		<property name="username" value="#{config.username}"/>
		<property name="password" value="#{config.password}"/>
	</bean>
	
	
	
	<bean id="ssfb" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="mapperLocations" value="classpath:method1/entity/*.xml"></property>
	</bean>
	
	
	<!--  
		MapperScannerConfigurer负责扫描指定包下面的所有的Mapper映射器，
		然后生成符合这些映射器要求的对象
		（其实，就是调用SqlSession的getMapper方法）。
		另外，还会将这些对象添加到spring容器里面、
		(默认的id是首字母小写之后的接口名，也可以使用@Repository()注解配置bean)。
	-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="method1.dao"/>
	</bean>
	

</beans>
